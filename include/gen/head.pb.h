// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: head.proto

#ifndef PROTOBUF_head_2eproto__INCLUDED
#define PROTOBUF_head_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace hygeia {
namespace gen {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_head_2eproto();
void protobuf_AssignDesc_head_2eproto();
void protobuf_ShutdownFile_head_2eproto();

class MessageHead;

// ===================================================================

class MessageHead : public ::google::protobuf::Message {
 public:
  MessageHead();
  virtual ~MessageHead();

  MessageHead(const MessageHead& from);

  inline MessageHead& operator=(const MessageHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageHead& default_instance();

  void Swap(MessageHead* other);

  // implements Message ----------------------------------------------

  MessageHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageHead& from);
  void MergeFrom(const MessageHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required bytes imei = 3;
  inline bool has_imei() const;
  inline void clear_imei();
  static const int kImeiFieldNumber = 3;
  inline const ::std::string& imei() const;
  inline void set_imei(const ::std::string& value);
  inline void set_imei(const char* value);
  inline void set_imei(const void* value, size_t size);
  inline ::std::string* mutable_imei();
  inline ::std::string* release_imei();
  inline void set_allocated_imei(::std::string* imei);

  // @@protoc_insertion_point(class_scope:hygeia.gen.MessageHead)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_imei();
  inline void clear_has_imei();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 uid_;
  ::std::string* imei_;
  friend void  protobuf_AddDesc_head_2eproto();
  friend void protobuf_AssignDesc_head_2eproto();
  friend void protobuf_ShutdownFile_head_2eproto();

  void InitAsDefaultInstance();
  static MessageHead* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageHead

// required uint32 cmd = 1;
inline bool MessageHead::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageHead::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageHead::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageHead::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 MessageHead::cmd() const {
  // @@protoc_insertion_point(field_get:hygeia.gen.MessageHead.cmd)
  return cmd_;
}
inline void MessageHead::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:hygeia.gen.MessageHead.cmd)
}

// required uint32 uid = 2;
inline bool MessageHead::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageHead::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageHead::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageHead::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 MessageHead::uid() const {
  // @@protoc_insertion_point(field_get:hygeia.gen.MessageHead.uid)
  return uid_;
}
inline void MessageHead::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:hygeia.gen.MessageHead.uid)
}

// required bytes imei = 3;
inline bool MessageHead::has_imei() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageHead::set_has_imei() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageHead::clear_has_imei() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageHead::clear_imei() {
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_->clear();
  }
  clear_has_imei();
}
inline const ::std::string& MessageHead::imei() const {
  // @@protoc_insertion_point(field_get:hygeia.gen.MessageHead.imei)
  return *imei_;
}
inline void MessageHead::set_imei(const ::std::string& value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
  // @@protoc_insertion_point(field_set:hygeia.gen.MessageHead.imei)
}
inline void MessageHead::set_imei(const char* value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
  // @@protoc_insertion_point(field_set_char:hygeia.gen.MessageHead.imei)
}
inline void MessageHead::set_imei(const void* value, size_t size) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hygeia.gen.MessageHead.imei)
}
inline ::std::string* MessageHead::mutable_imei() {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:hygeia.gen.MessageHead.imei)
  return imei_;
}
inline ::std::string* MessageHead::release_imei() {
  clear_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = imei_;
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageHead::set_allocated_imei(::std::string* imei) {
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imei_;
  }
  if (imei) {
    set_has_imei();
    imei_ = imei;
  } else {
    clear_has_imei();
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:hygeia.gen.MessageHead.imei)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gen
}  // namespace hygeia

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_head_2eproto__INCLUDED
